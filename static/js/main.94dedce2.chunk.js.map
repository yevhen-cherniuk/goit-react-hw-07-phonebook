{"version":3,"sources":["components/FormAddContacts/FormAddContacts.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookReducer.js","redux/store.js","redux/phonebook/phonebookSelectors.js","redux/phonebook/phonebookOperations.js","components/Container/Container.jsx","components/Alert/Alert.jsx","components/FormAddContacts/FormAddContacts.jsx","components/FormAddContacts/FormAddContactsContainer.jsx","components/Filter/Filter.jsx","components/Filter/FilterContainer.jsx","components/ContactItem/ContactItem.jsx","components/ContactItem/ContactItemContainers.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactListContainer.jsx","App.js","AppContainer.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","filter","items","createReducer","phonebookActions","state","payload","item","id","combineReducers","store","configureStore","reducer","contacts","phonebookReducer","getContacts","getFilter","getVisibleContacts","createSelector","name","toLowerCase","includes","getContactById","_","taskId","find","contact","axios","defaults","baseURL","addContact","number","dispatch","post","then","data","catch","error","fetchContact","get","removeContact","delete","Container","children","className","style","container","Alert","message","FormAddContacts","isAdded","handlesubmit","handleChangeName","handleChangeNumber","form","onSubmit","span","input","type","placeholder","value","onChange","e","target","pattern","title","button","CSSTransition","in","timeout","classNames","unmountOnExit","FormAddContactsContainer","setState","handleClearForm","preventDefault","props","setTimeout","el","this","Component","mapDispatchToprops","phonebookOperations","connect","phonebookSelectors","Filter","filterState","handleChange","label","ContactItem","handleClick","btnList","onClick","phonebookOperation","ContactList","visibleContacts","TransitionGroup","component","map","ContactItemContainers","App","onIncrement","counterValue","appear","FilterContainer","ContactListContainer","AppContainer","mapDispatchToProps","phonbookOperation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94dedce2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddContacts_form__2hjAc\",\"input\":\"FormAddContacts_input__SCiB9\",\"span\":\"FormAddContacts_span__bKg09\",\"button\":\"FormAddContacts_button__1wHGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1ylEu\",\"span\":\"Filter_span__3FbvO\",\"input\":\"Filter_input__2tSVb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2N1z1\",\"span\":\"ContactItem_span__3f43h\",\"btnList\":\"ContactItem_btnList__MkRuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__b1LSj\",\"title\":\"Container_title__e8TYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3tnKT\",\"item-enter\":\"ContactList_item-enter__3P0CC\",\"item-enter-active\":\"ContactList_item-enter-active__3I7UA\",\"item-exit\":\"ContactList_item-exit__YZcD8\",\"item-exit-active\":\"ContactList_item-exit-active__2UPnV\",\"contact-list\":\"ContactList_contact-list__3OnSQ\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"phonebook/addRequest\");\r\nconst addContactSuccess = createAction(\"phonebook/addSuccess\");\r\nconst addContactError = createAction(\"phonebook/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"phonebook/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"phonebook/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"phonebook/fetchError\");\r\n\r\nconst removeContactRequest = createAction(\"phonebook/removeRequest\");\r\nconst removeContactSuccess = createAction(\"phonebook/removeSuccess\");\r\nconst removeContactError = createAction(\"phonebook/removeError\");\r\n\r\nconst filter = createAction(\"phonebook/filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  filter,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport phonebookActions from \"./phonebookActions\";\r\n\r\nconst fetchContact = (state, { payload }) => payload;\r\nconst addContact = (state, { payload }) => [...state, payload];\r\nconst removeContact = (state, { payload }) => state.filter((item) => item.id !== payload);\r\nconst onFilter = (state, { payload }) => payload;\r\n\r\nconst items = createReducer([], {\r\n  [phonebookActions.fetchContactsSuccess]: fetchContact,\r\n  [phonebookActions.addContactSuccess]: addContact,\r\n  [phonebookActions.removeContactSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [phonebookActions.filter]: onFilter,\r\n});\r\n\r\nexport default combineReducers({ items, filter });","// import { configureStore , getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\n// import phonebookReducer from \"./phonebook/phonebookReducer\";\r\n// import {\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n// ];\r\n\r\n// const store = configureStore({\r\n//   reducer: phonebookReducer,\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// export { store };\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport phonebookReducer from \"./phonebook/phonebookReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n});\r\n\r\nexport default store;","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  return contacts.filter((item) => item.name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n\r\nconst getContactById = createSelector([(_, taskId) => taskId, getContacts], (id, contacts) =>\r\n  contacts.find((contact) => contact.id === id)\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getContactById,\r\n};","import axios from \"axios\";\r\nimport phonebookActions from \"./phonebookActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  dispatch(phonebookActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(phonebookActions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(phonebookActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(phonebookActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(phonebookActions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(phonebookActions.fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(phonebookActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(phonebookActions.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(phonebookActions.removeContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContact,\r\n  removeContact,\r\n};","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ message }) => <div className=\"AlertWrapper\">{message}</div>;\r\n\r\nexport default Alert;","import React from \"react\";\r\nimport style from \"./FormAddContacts.module.css\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function FormAddContacts({\r\n  name,\r\n  number,\r\n  isAdded,\r\n  message,\r\n  handlesubmit,\r\n  handleChangeName,\r\n  handleChangeNumber,\r\n}) {\r\n  return (\r\n      <>\r\n        <form className={style.form} onSubmit={handlesubmit}>\r\n          <label className=\"lable\">\r\n            <span className={style.span}>Name</span>\r\n            <input\r\n              className={style.input}\r\n              type=\"text\"\r\n              placeholder=\"Name Surname\"\r\n              value={name}\r\n              onChange={(e) => handleChangeName(e.target.value)}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            />\r\n          </label>\r\n          <label className=\"lable\">\r\n            <span className={style.span}>Number</span>\r\n            <input\r\n              className={style.input}\r\n              type=\"tel\"\r\n              placeholder=\"Phone\"\r\n              value={number}\r\n              onChange={(e) => handleChangeNumber(e.target.value)}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            />\r\n          </label>\r\n          <button className={style.button} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n        <CSSTransition in={isAdded} timeout={500} classNames=\"fade-alert\" unmountOnExit>\r\n          <Alert message={message} />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookSelectors from \"../../redux/phonebook/phonebookSelectors\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebookOperations\";\r\nimport FormAddContacts from \"./FormAddContacts\";\r\n\r\nclass FormAddContactsContainer extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isAdded: false,\r\n    message: \"\",\r\n  };\r\n\r\n  handleChangeName = (name) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  handleChangeNumber = (number) => {\r\n    this.setState({ number });\r\n  };\r\n\r\n  handleClearForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  handlesubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    if (!name || !number) {\r\n      this.setState({ isAdded: true, message: \"Fill in all the fields\" });\r\n      setTimeout(() => {\r\n        this.setState({ isAdded: false });\r\n      }, 2000);\r\n      return;\r\n    }\r\n\r\n    if (contacts.find((el) => el.name === name)) {\r\n      this.setState({ isAdded: true, message: \"Contact already exist\" });\r\n      setTimeout(() => {\r\n        this.setState({ isAdded: false });\r\n      }, 2000);\r\n    } else {\r\n      this.props.addContact({ name, number });\r\n      this.setState({ isAdded: true, message: \"Contact added successfully\" });\r\n      setTimeout(() => {\r\n        this.setState({ isAdded: false });\r\n      }, 2000);\r\n    }\r\n    this.handleClearForm();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormAddContacts\r\n        {...this.state}\r\n        handleChangeName={this.handleChangeName}\r\n        handleChangeNumber={this.handleChangeNumber}\r\n        handlesubmit={this.handlesubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToprops = {\r\n  addContact: phonebookOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(FormAddContactsContainer);","import React from \"react\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterState, handleChange }) => {\r\n\r\n  return (\r\n    <label className={style.label}>\r\n      <span className={style.span}>Find contacts</span>\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        placeholder=\"name\"\r\n        value={filterState}\r\n        onChange={(e) => handleChange(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import { connect } from \"react-redux\";\r\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\r\nimport phonebookSelectors from \"../../redux/phonebook/phonebookSelectors\";\r\nimport Filter from './Filter'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterState: phonebookSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToprops = {\r\n  handleChange: phonebookActions.filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter);\r\n","import React from 'react';\r\nimport style from \"./ContactItem.module.css\";\r\n\r\nconst ContactItem = ({ name, number, handleClick }) => {\r\n\r\n  return (\r\n    <li className={style.item}>\r\n      <span className={style.span}></span>\r\n      {name}: {number}\r\n      <button\r\n        type=\"button\"\r\n        className={style.btnList}\r\n        onClick={handleClick}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;","import { connect } from \"react-redux\";\r\nimport phonebookOperation from \"../../redux/phonebook/phonebookOperations\";\r\nimport phonebookSelectors from \"../../redux/phonebook/phonebookSelectors\";\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nconst mapStateToProps = (state, { id }) => ({\r\n  ...phonebookSelectors.getContactById(state, id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => ({\r\n  handleClick: () => dispatch(phonebookOperation.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);","import React from \"react\";\r\nimport ContactItemContainers from \"../ContactItem/ContactItemContainers\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ visibleContacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n      {visibleContacts.map((el) => {\r\n        return (\r\n          <CSSTransition key={el.id} timeout={500} classNames=\"item\">\r\n            <ContactItemContainers id={el.id} />\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default ContactList;","import { connect } from \"react-redux\";\r\nimport phonebookSelectors from \"../../redux/phonebook/phonebookSelectors\";\r\nimport ContactList from './ContactList';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  visibleContacts: phonebookSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);","import React from 'react';\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\n// Components\nimport Container from './components/Container/Container';\nimport FormAddContactsContainer from \"./components/FormAddContacts/FormAddContactsContainer\";\nimport FilterContainer from \"./components/Filter/FilterContainer\";\nimport ContactListContainer from \"./components/ContactList/ContactListContainer\";\n\nexport default function App({ contacts,onIncrement,counterValue }) {\n  return (\n      <Container title=\"Phonebook\">\n        <CSSTransition in={true} appear={true} timeout={500} classNames=\"fade-logo\" unmountOnExit>\n          <h1 className=\"title\">Phonebook</h1> \n        </CSSTransition>        \n        <FormAddContactsContainer />\n        <h2 className=\"title\">Contacts</h2>\n          <CSSTransition in={true} appear={true} timeout={500} classNames=\"fade-filter\" unmountOnExit>\n            <FilterContainer />\n          </CSSTransition>\n        <ContactListContainer />\n      </Container>\n    );\n  }\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookSelectors from \"./redux/phonebook/phonebookSelectors\";\r\nimport phonbookOperation from \"./redux/phonebook/phonebookOperations\";\r\nimport App from \"./App\";\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\n  render() {\r\n    return <App {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchContact: phonbookOperation.fetchContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}